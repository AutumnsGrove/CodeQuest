# golangci-lint configuration for CodeQuest
# https://golangci-lint.run/usage/configuration/

run:
  # Timeout for analysis
  timeout: 5m

  # Include test files
  tests: true

  # Skip vendor directory
  skip-dirs-use-default: true

  # Skip generated files
  skip-files:
    - ".*\\.pb\\.go$"
    - ".*\\.gen\\.go$"

linters:
  enable:
    # Default linters
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused

    # Additional linters for code quality
    - bodyclose
    - dupl
    - exportloopref
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - gofmt
    - goimports
    - goprintffuncname
    - gosec
    - lll
    - misspell
    - nakedret
    - nolintlint
    - prealloc
    - revive
    - unconvert
    - unparam
    - whitespace

  disable:
    # Disabled as they are too strict or not relevant
    - exhaustive
    - gochecknoglobals
    - gochecknoinits
    - godox
    - goerr113
    - gomnd
    - nestif
    - testpackage
    - wsl

linters-settings:
  errcheck:
    # Report about not checking errors in type assertions
    check-type-assertions: true

  govet:
    # Report about shadowed variables
    check-shadowing: true

  gocyclo:
    # Minimal code complexity to report
    min-complexity: 15

  gocognit:
    # Minimal cognitive complexity to report
    min-complexity: 20

  goconst:
    # Minimal length of string constant
    min-len: 3
    # Minimal occurrences count to trigger
    min-occurrences: 3

  lll:
    # Max line length
    line-length: 120
    # Tab width in spaces
    tab-width: 4

  misspell:
    # Locale to use
    locale: US

  nakedret:
    # Max function length to check for naked returns
    max-func-lines: 30

  dupl:
    # Minimum lines to consider as duplicate
    threshold: 100

  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style

  gosec:
    excludes:
      - G304 # File path provided as taint input
      - G307 # Deferring unsafe method on os.File

  revive:
    rules:
      - name: blank-imports
      - name: context-as-argument
      - name: context-keys-type
      - name: dot-imports
      - name: error-naming
      - name: error-return
      - name: error-strings
      - name: exported
      - name: increment-decrement
      - name: package-comments
      - name: range
      - name: receiver-naming
      - name: time-naming
      - name: unexported-return
      - name: var-declaration
      - name: var-naming

issues:
  # Exclude some linters from running on tests files
  exclude-rules:
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - gocognit
        - lll

    # Exclude known issues in vendor
    - path: vendor/
      linters:
        - all

    # Exclude some staticcheck messages
    - linters:
        - staticcheck
      text: "SA9003:"

    # Exclude lll issues for long lines with go generate
    - linters:
        - lll
      source: "^//go:generate "

  # Maximum issues count per one linter
  max-issues-per-linter: 50

  # Maximum count of issues with the same text
  max-same-issues: 3

  # Show only new issues
  new: false

  # Fix found issues (if it's supported by the linter)
  fix: false

output:
  # Format of the output
  format: colored-line-number

  # Print lines of code with issue
  print-issued-lines: true

  # Print linter name in the end of issue text
  print-linter-name: true

  # Make output unique by line
  uniq-by-line: true

  # Sort results
  sort-results: true